# Generated by Django 3.2 on 2022-10-08 09:29

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import sense.validators


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Breathing',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('uploaded_date', models.DateField(auto_now_add=True)),
                ('title', models.CharField(max_length=128)),
                ('breathing_file', models.FileField(upload_to='', verbose_name='Breathing exercise')),
            ],
        ),
        migrations.CreateModel(
            name='Meditation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('uploaded_date', models.DateField(auto_now_add=True)),
                ('title', models.CharField(max_length=128)),
                ('meditation_file', models.FileField(upload_to='', verbose_name='Meditation')),
            ],
        ),
        migrations.CreateModel(
            name='Person',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, verbose_name='Name')),
                ('phone', models.CharField(max_length=10, verbose_name='Phone')),
                ('address', models.CharField(blank=True, default='None', max_length=128, verbose_name='Address')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Podcast',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('uploaded_date', models.DateField(auto_now_add=True)),
                ('podcast_name', models.CharField(max_length=128)),
                ('author', models.CharField(default='UpSense Team', max_length=128)),
                ('podcast', models.FileField(upload_to='', verbose_name='Podcast')),
            ],
        ),
        migrations.CreateModel(
            name='SafetyPlan',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(default='SafetyPlan1', max_length=128, verbose_name='Safety Plan name')),
                ('warning_signs', models.TextField(help_text='Warning signs can be thoughts, feelings or behaviours that appear or increase when you get distressed.', max_length=3000, verbose_name='Warning signs')),
                ('coping_strategies', models.CharField(choices=[('1', 'Physical exercises'), ('2', 'Prayer or engaging in other spiritual activity'), ('3', 'Count slowly to 100 and backwards'), ('4', 'Phone call to mentor or friend'), ('5', 'Meet with someone'), ('6', 'Go for a walk outside'), ('7', 'Focus on breathing'), ('8', 'Play with or hug a pet'), ('9', 'Let shed tears'), ('10', 'other...')], max_length=50, verbose_name='Coping Strategies')),
                ('safe_places', models.CharField(help_text='Think of any places where you could go to feel safe or where you could seek comfort when you find yourself in crisis.', max_length=1024)),
                ('professional_help', models.CharField(help_text='What medical or mental health professionals can you contact in time of crisis? You can also include your therapist information here.', max_length=1024)),
                ('environmental_safety', models.CharField(help_text='Think of any objects in your environmental that could pose a risk to your safety. That could be weapons, drugs, alcohol, toxins or anything you could use to self-harm.', max_length=1200)),
                ('other_suggestions', models.CharField(blank=True, help_text='If you think of anything that could help you in time of crisis attach them here.', max_length=2000)),
                ('emergency_contacts', models.ForeignKey(default='', help_text='Consider who you could contact with to take your mind off your thoughts or who could help you feel better', on_delete=django.db.models.deletion.CASCADE, to='sense.person')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='NotePad',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('notepad_name', models.CharField(max_length=50)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Note',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateTimeField(auto_now_add=True)),
                ('title', models.CharField(max_length=128)),
                ('note_content', models.TextField()),
                ('notepad', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='sense.notepad')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Goal',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('goal', models.CharField(blank=True, choices=[('1', 'Symptoms intensity below 5'), ('2', 'Symptoms intensity below 3'), ('3', 'Symptoms intensity below 2'), ('4', 'Symptoms intensity below 1')], max_length=2000)),
                ('goal_target', models.IntegerField(default=0)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='DailyChecklist',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField(auto_now_add=True)),
                ('mood', models.CharField(choices=[('J', 'Feeling Joy'), ('M', 'Motivated'), ('P', 'Staying Positive'), ('I', 'Improving'), ('S', 'Sad'), ('A', 'Anxious'), ('H', 'Hopeless'), ('V', 'Avoiding Triggers'), ('R', 'Angry'), ('D', 'Distracted'), ('L', 'Lost'), ('F', 'Afraid'), ('ST', 'Struggling')], default='', max_length=2)),
                ('symptoms', models.TextField(help_text='Describe what symptoms have you experienced today?')),
                ('symptoms_intensity', models.IntegerField(blank=True, null=True, validators=[sense.validators.validate_intensity])),
                ('triggers', models.TextField(help_text='What triggers have you experienced today?')),
                ('achievements', models.TextField(help_text='What have you accomplished today?')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Article',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=250)),
                ('slug', models.SlugField(max_length=250, unique_for_date='publish')),
                ('content', models.TextField()),
                ('publish', models.DateTimeField(default=django.utils.timezone.now)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('status', models.CharField(choices=[('draft', 'Draft'), ('published', 'Published')], default='draft', max_length=10)),
                ('author', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='article', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ('-publish',),
            },
        ),
    ]
